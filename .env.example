# APIForge MCP Environment Variables Example
# Copy this file to .env and modify the values as needed

# ==========================================
# Core Configuration
# ==========================================

# Runtime environment: development | test | production
# IMPORTANT: If not set, APIForgeMCP defaults to developer-friendly mode
# which allows self-signed certificates for localhost and private networks
# NODE_ENV=development

# Data storage directory
APIFORGE_DATA_DIR=./data

# ==========================================
# Logging Configuration
# ==========================================

# Enable logging output (logs are DISABLED by default for MCP users)
# All logs are sent to stderr to avoid interfering with MCP JSON-RPC protocol on stdout
# Only enable this when debugging issues
# APIFORGE_ENABLE_LOGS=true

# Alternative: Enable debug mode (same as APIFORGE_ENABLE_LOGS=true)
# APIFORGE_DEBUG=true

# ==========================================
# SSL/TLS Configuration
# ==========================================

# SSL Certificate Validation
# - In development: defaults to false (allows self-signed certificates)
# - In production: defaults to true (strict validation)
# WARNING: Only set to false in production if you understand the security risks!
# SSL_REJECT_UNAUTHORIZED=true

# Allowed Self-Signed Certificate Hosts
# Comma-separated list of hostnames that can use self-signed certificates
# Supports wildcards (e.g., *.dev.local)
# Example: api.dev.local,*.test.internal,staging.example.com
# SSL_ALLOWED_SELF_SIGNED_HOSTS=

# Trusted Certificate Fingerprints
# Comma-separated list of SHA256 fingerprints for trusted self-signed certificates
# This provides additional security when using self-signed certificates
# SSL_TRUSTED_FINGERPRINTS=

# ==========================================
# Development Environment Settings
# ==========================================

# In development, these hosts automatically allow self-signed certificates:
# - localhost, 127.0.0.1, ::1
# - Private networks: 10.x, 192.168.x, 172.16-31.x
# - .local domains
# - Any hosts listed in SSL_ALLOWED_SELF_SIGNED_HOSTS

# ==========================================
# Production Environment Settings
# ==========================================

# In production, SSL validation is strictly enforced by default
# Only the following exceptions are allowed:
# - Hosts explicitly listed in SSL_ALLOWED_SELF_SIGNED_HOSTS
# - Certificates with fingerprints in SSL_TRUSTED_FINGERPRINTS

# ==========================================
# Security Notes
# ==========================================

# 1. Never disable SSL validation in production without understanding the risks
# 2. MITM attacks are possible when SSL validation is disabled
# 3. Use SSL_ALLOWED_SELF_SIGNED_HOSTS to limit exposure
# 4. All SSL validation bypasses are logged for audit purposes
# 5. Consider using proper certificates from a trusted CA in production

# ==========================================
# Example Configurations
# ==========================================

# Development (relaxed security for local development):
# NODE_ENV=development
# SSL_REJECT_UNAUTHORIZED=false
# SSL_ALLOWED_SELF_SIGNED_HOSTS=api.dev.local,*.test.internal

# Staging (moderate security with specific exceptions):
# NODE_ENV=production
# SSL_REJECT_UNAUTHORIZED=true
# SSL_ALLOWED_SELF_SIGNED_HOSTS=staging.example.com
# SSL_TRUSTED_FINGERPRINTS=SHA256:abc123...,SHA256:def456...

# Production (strict security):
# NODE_ENV=production
# SSL_REJECT_UNAUTHORIZED=true
# SSL_ALLOWED_SELF_SIGNED_HOSTS=
# SSL_TRUSTED_FINGERPRINTS=